# 1. Plot original series
plot(Xt2, main = "Original Series", type = "l")
# 2. First difference to remove trend
Xt2_diff1 <- diff(Xt2)
# 3. Plot differenced series
plot(Xt2_diff1, main = "Differenced Series", type = "l")
# 4. Check stationarity
# With Augmented Dickey-Fuller Test (ADF)
adf <- adfTest(Xt2_diff1, lag = 14, type = "ct")
adf
# With Phillips-Perron Test (PP)
pp.test(Xt2_diff1)
# Load required packages
library(fUnitRoots)
library(zoo)
library(tseries)
library(forecast)
library(readr)
# Load the data online
path_donnees <- "/Users/nayelbenabdesadok/GitProjects/Time_Series_ENSAE/Partie_1_clean/CVSCJO.csv"
data <- read_delim(file = path_donnees, delim = ";", escape_double = FALSE, trim_ws = TRUE)
# Clean the table
data_all <- data[4:425, ]
data_all$Codes <- NULL
colnames(data_all) <- c("Date_MY", "IPI")
# Converting date to the correct format
data_all$Date <- as.Date(paste(data_all$Date_MY, 1, sep = "-"), format = "%Y-%m-%d")
data_all$Date_MY <- NULL
# Extracting month and year from date
Year <- as.numeric(format(data_all$Date, format = "%Y"))
Month <- format(data_all$Date, format = "%m")
data_all <- cbind(data_all, Year, Month)
data_all$Year <- as.numeric(data_all$Year)
data_all$IPI <- as.numeric(data_all$IPI)
sort(data_all$IPI)
data_all <- data_all[order(data_all$Date), ]
rownames(data_all) <- seq(length = nrow(data_all))
# Create a time series for easier analysis, and plot
Xt.ts <- ts(data_all$IPI, start = c(1990, 1), end = c(2025, 2), frequency = 12)
par(mfrow = c(1, 1))
plot.ts(Xt.ts, xlab = "Years", ylab = "IPI (CVS-CJO)")
# Decomposing data into seasonal + trend + random
decompose_Xt <- decompose(Xt.ts, "additive")
plot(as.ts(decompose_Xt$seasonal))
plot(as.ts(decompose_Xt$trend))
plot(as.ts(decompose_Xt$random))
plot(decompose_Xt)
# Set up a 2-row, 1-column layout
par(mfrow = c(2, 1))
# 1. Plot original series
plot(Xt.ts, type = "l")
# 2. First difference to remove trend
Xt_diff1 <- diff(Xt.ts)
# 3. Plot differenced series
plot(Xt_diff1, type = "l")
# 4. Check stationarity
# With Augmented Dickey-Fuller Test (ADF)
adf <- adfTest(Xt.ts, lag = 1, type = "ct") #
adf
# With Philipps-Perron Test (PP)
pp.test(Xt_diff1)
# With Kwiatkowski-Phillips-Schmidt-Shin Test (KPSS)
kpss_test <- kpss.test(Xt_diff1)
print("KPSS Test Results:")
print(kpss_test)
## We then save ACF plot
png("acf_plot_Xt.png")
acf(Xt_diff1, main = "")
dev.off()
# Save PACF plot
png("pacf_plot_Xt.png")
pacf(Xt_diff1, main = "")
